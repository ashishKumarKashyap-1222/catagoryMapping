[{"/home/cedcoss/Desktop/mapping/my-app/src/index.js":"1","/home/cedcoss/Desktop/mapping/my-app/src/App.js":"2","/home/cedcoss/Desktop/mapping/my-app/src/reportWebVitals.js":"3","/home/cedcoss/Desktop/mapping/my-app/src/component/taxonomy.js":"4","/home/cedcoss/Desktop/mapping/my-app/src/component/EbayUs.js":"5","/home/cedcoss/Desktop/mapping/my-app/src/component/Ebay_UK.js":"6","/home/cedcoss/Desktop/mapping/my-app/src/component/DataTable.js":"7","/home/cedcoss/Desktop/mapping/my-app/src/component/Edit.js":"8","/home/cedcoss/Desktop/mapping/my-app/src/component/Home.js":"9","/home/cedcoss/Desktop/mapping/my-app/src/component/Edit_click.js":"10","/home/cedcoss/Desktop/mapping/my-app/src/component/function.js":"11"},{"size":500,"mtime":1611922150921,"results":"12","hashOfConfig":"13"},{"size":826,"mtime":1613124085024,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611922150921,"results":"15","hashOfConfig":"13"},{"size":11768,"mtime":1613045129657,"results":"16","hashOfConfig":"13"},{"size":11910,"mtime":1612962793310,"results":"17","hashOfConfig":"13"},{"size":11620,"mtime":1612776482979,"results":"18","hashOfConfig":"13"},{"size":2679,"mtime":1613205236497,"results":"19","hashOfConfig":"13"},{"size":3587,"mtime":1613195025049,"results":"20","hashOfConfig":"13"},{"size":16230,"mtime":1613211900862,"results":"21","hashOfConfig":"13"},{"size":11572,"mtime":1613205969115,"results":"22","hashOfConfig":"13"},{"size":964,"mtime":1613142140842,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ukxxca",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/cedcoss/Desktop/mapping/my-app/src/index.js",[],["50","51"],"/home/cedcoss/Desktop/mapping/my-app/src/App.js",[],"/home/cedcoss/Desktop/mapping/my-app/src/reportWebVitals.js",[],"/home/cedcoss/Desktop/mapping/my-app/src/component/taxonomy.js",["52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76"],"/home/cedcoss/Desktop/mapping/my-app/src/component/EbayUs.js",["77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"\nimport React, { Component, useState, useEffect } from 'react'\n\nexport class EbayUs extends Component {\n    constructor() {\n        super()\n        this.state = {\n            abc: {},\n        }\n    }\n\n\n\n\n    async componentDidMount() {\n        var temp;\n        var finalObj = {};\n        var allKeyId = {}\n        await fetch('https://raw.githubusercontent.com/erashish455/text/main/asdf.txt').then(response => response.text())\n            .then(data => {\n                let maxLength = 0\n                let txt = data\n                temp = txt.split(\"\\n\");\n                // console.log(temp)\n                temp.shift();\n                temp.pop();\n                // console.log(temp)\n                let unique = {}\n\n                temp.forEach((item) => {\n                    let bpl = item.split(' - ')\n                    let spl = item.split(' - ')[1].split('//')\n                    // console.log(spl)\n                    spl.forEach((a) => {\n                        // console.log(item.trim())\n                        unique[a.trim()] = ''\n                    })\n                    if (spl.length > maxLength) {\n                        maxLength = spl.length\n                    }\n                    allKeyId[bpl[1]] = bpl[0].trim();\n\n                    var nested = spl.reduceRight(function (obj, value) {\n                        return { [value.trim()]: obj };\n                    }, {});\n\n                    finalObj = this.combine(finalObj, nested);\n                });\n                // console.log(unique)\n                // console.log(finalObj)\n                // console.log(Object.keys(unique).length)\n                // console.log(maxLength)\n                // console.log(allKeyId)\n                this.recurtion(finalObj, allKeyId)\n\n            })\n    }\n\n\n    combine = (prevObj, nextObj) => {\n        var c = 0;\n        for (var key in nextObj) {\n            if (!(key in prevObj)) {\n                prevObj[key] = nextObj[key];\n            } else {\n                this.combine(prevObj[key], nextObj[key]);\n            }\n        }\n        return prevObj;\n    }\n    recurtion(object, allKeyId) {\n        let nodes = [];\n        let MajorObj = object\n        Object.keys(MajorObj).forEach((eleModule, indexMod) => {\n            let ObjContToAdd = [];\n            let parent = '0'\n            let child = ''\n            Object.keys(allKeyId).map((i) => {\n\n                if (i.trim() == eleModule) {\n                    child = allKeyId[i]\n                }\n            })\n\n            Object.keys(MajorObj[eleModule]).forEach((eleCont, indexCont) => {\n                let ObjActToAdd = [];\n                let parent = ''\n                let child = ''\n                Object.keys(allKeyId).map((i) => {\n                    if (i.split('//').length > 1) {\n                        if (i.split('//')[i.split('//').length - 1].trim() == eleCont) {\n                            child = allKeyId[i]\n\n                        }\n                        if (i.split('//')[0].trim() === eleModule) {\n                            parent = allKeyId[eleModule]\n                        }\n                    }\n                })\n                Object.keys(MajorObj[eleModule][eleCont]).forEach((eleAct, indexAct) => {\n                    let ObjShowToAdd = []\n                    let parent = ''\n                    let child = ''\n                    Object.keys(allKeyId).map((i) => {\n                        if (i.split('//').length > 1) {\n                            if (i.split('//')[i.split('//').length - 1].trim() == eleAct) {\n                                child = allKeyId[i]\n                            }\n                            if (i.split('//')[i.split('//').length - 1].trim() == eleCont) {\n                                parent = allKeyId[i]\n                            }\n                        }\n                    })\n                    Object.keys(MajorObj[eleModule][eleCont][eleAct]).forEach((eleShow, indexShow) => {\n                        let ObjAnyToAdd = [];\n                        let parent = ''\n                        let child = ''\n                        Object.keys(allKeyId).map((i) => {\n                            if (i.split('//').length > 1) {\n                                if (i.split('//')[i.split('//').length - 1].trim() == eleShow) {\n                                    child = allKeyId[i]\n                                }\n                                if (i.split('//')[i.split('//').length - 1].trim() == eleAct) {\n                                    parent = allKeyId[i]\n                                }\n                            }\n                        })\n                        Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow]).forEach((eleAny, indexAny) => {\n                            let ObjAlfaToAdd = []\n                            let parent = ''\n                            let child = ''\n                            Object.keys(allKeyId).map((i) => {\n                                if (i.split('//').length > 1) {\n                                    if (i.split('//')[i.split('//').length - 1].trim() == eleAny) {\n                                        child = allKeyId[i]\n                                    }\n                                    if (i.split('//')[i.split('//').length - 1].trim() == eleShow) {\n                                        parent = allKeyId[i]\n                                    }\n                                }\n                            })\n                            Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow][eleAny]).forEach((eleAlfa, indexAlfa) => {\n                                let ObjBetaToAdd = [];\n                                let parent = ''\n                                let child = ''\n                                Object.keys(allKeyId).map((i) => {\n                                    if (i.split('//').length > 1) {\n                                        if (i.split('//')[i.split('//').length - 1].trim() == eleAlfa) {\n                                            child = allKeyId[i]\n                                        }\n                                        if (i.split('//')[i.split('//').length - 1].trim() == eleAny) {\n                                            parent = allKeyId[i]\n                                        }\n                                    }\n                                })\n                                Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow][eleAny][eleAlfa]).forEach((eleBeta, indexBeta) => {\n                                    let ObjectGamaToAdd = [];\n\n                                    let parent = ''\n                                    let child = ''\n                                    Object.keys(allKeyId).map((i) => {\n                                        if (i.split('//').length > 1) {\n                                            if (i.split('//')[i.split('//').length - 1].trim() == eleBeta) {\n                                                child = allKeyId[i]\n                                            }\n                                            if (i.split('//')[i.split('//').length - 1].trim() == eleAlfa) {\n                                                parent = allKeyId[i]\n                                            }\n                                        }\n                                    })\n                                    Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow][eleAny][eleAlfa][eleBeta]).forEach((eleGama, indexGama) => {\n                                        let parent = ''\n                                        let child = ''\n                                        Object.keys(allKeyId).map((i) => {\n                                            if (i.split('//').length > 1) {\n                                                if (i.split('//')[i.split('//').length - 1].trim() == eleGama) {\n                                                    child = allKeyId[i]\n                                                }\n                                                if (i.split('>')[i.split('>').length - 1].trim() == eleBeta) {\n                                                    parent = allKeyId[i]\n                                                }\n                                            }\n                                        })\n                                        ObjectGamaToAdd[indexGama] = {\n                                            name: eleGama,\n                                            marketplace_id: child,\n                                            marketplace_parent_id: parent,\n                                            marketplace: 'Ebay_US', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}>${eleAlfa}>${eleBeta}>${eleGama}`, level: 7, children: []\n                                        }\n\n                                    })\n\n                                    ObjBetaToAdd[indexBeta] = {\n                                        name: eleBeta,\n                                        marketplace_id: child,\n                                        marketplace_parent_id: parent,\n                                        marketplace: 'Ebay_US', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}>${eleAlfa}>${eleBeta}`, level: 6, children: ObjectGamaToAdd\n                                    }\n                                })\n\n                                ObjAlfaToAdd[indexAlfa] = {\n                                    name: eleAlfa,\n                                    marketplace_id: child,\n                                    marketplace_parent_id: parent,\n                                    marketplace: 'Ebay_US', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}>${eleAlfa}`, children: ObjBetaToAdd, level: 5\n                                }\n                                // }\n                            })\n                            ObjAnyToAdd[indexAny] = {\n                                name: eleAny,\n                                marketplace_id: child,\n                                marketplace_parent_id: parent,\n                                marketplace: 'Ebay_US', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}`, children: ObjAlfaToAdd, level: 4\n                            }\n                        })\n                        ObjShowToAdd[indexShow] = {\n                            name: eleShow,\n                            marketplace_id: child,\n                            marketplace_parent_id: parent,\n                            marketplace: 'Ebay_US', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}`, children: ObjAnyToAdd, level: 3\n                        }\n                    })\n                    ObjActToAdd[indexAct] = {\n                        name: eleAct,\n                        marketplace_id: child,\n                        marketplace_parent_id: parent,\n                        marketplace: 'Ebay_US', full_path: `${eleModule}>${eleCont}>${eleAct}`, children: ObjShowToAdd, level: 2\n                    }\n                })\n                ObjContToAdd[indexCont] = {\n                    name: eleCont,\n                    marketplace_id: child,\n                    marketplace_parent_id: parent,\n                    marketplace: 'Ebay_US', full_path: `${eleModule}>${eleCont}`, children: ObjActToAdd, level: 1\n                }\n            })\n            nodes[indexMod] = {\n                name: eleModule,\n                marketplace_id: child,\n                marketplace_parent_id: parent,\n                marketplace: 'Ebay_US', full_path: `${eleModule}`, children: ObjContToAdd, level: 0\n            }\n        })\n        console.log(nodes)\n        // console.log(JSON.stringify(nodes))\n\n\n\n\n\n    }\n\n\n\n\n    render() {\n\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n\nexport default EbayUs\n\n\n","/home/cedcoss/Desktop/mapping/my-app/src/component/Ebay_UK.js",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"\nimport React, { Component, useState, useEffect } from 'react'\n\nexport class EbayUK extends Component {\n    constructor() {\n        super()\n        this.state = {\n            abc: {},\n        }\n    }\n\n\n\n\n    async componentDidMount() {\n        var temp;\n        var finalObj = {};\n        var allKeyId = {}\n        await fetch('https://raw.githubusercontent.com/erashish455/text/main/Ebay_UK.txt').then(response => response.text())\n            .then(data => {\n                let maxLength = 0\n                let txt = data\n                temp = txt.split(\"\\n\");\n                // console.log(temp)\n                temp.shift();\n                temp.pop();\n                // console.log(temp)\n\n                temp.forEach((item) => {\n                    let bpl = item.split(' - ')\n                    let spl = item.split(' - ')[1].split('//')\n                    // console.log(spl)\n                    if (spl.length > maxLength) {\n                        maxLength = spl.length\n                    }\n                    allKeyId[bpl[1]] = bpl[0].trim();\n\n                    var nested = spl.reduceRight(function (obj, value) {\n                        return { [value.trim()]: obj };\n                    }, {});\n\n                    finalObj = this.combine(finalObj, nested);\n                });\n                // console.log(finalObj)\n                console.log(maxLength)\n                // console.log(allKeyId)\n                // this.recurtion(finalObj, allKeyId)\n\n            })\n    }\n\n\n    combine = (prevObj, nextObj) => {\n        var c = 0;\n        for (var key in nextObj) {\n            if (!(key in prevObj)) {\n                prevObj[key] = nextObj[key];\n            } else {\n                this.combine(prevObj[key], nextObj[key]);\n            }\n        }\n        return prevObj;\n    }\n    recurtion(object, allKeyId) {\n        let nodes = [];\n        let MajorObj = object\n        Object.keys(MajorObj).forEach((eleModule, indexMod) => {\n            let ObjContToAdd = [];\n            let parent = '0'\n            let child = ''\n            Object.keys(allKeyId).map((i) => {\n\n                if (i.trim() == eleModule) {\n                    child = allKeyId[i]\n                }\n            })\n\n            Object.keys(MajorObj[eleModule]).forEach((eleCont, indexCont) => {\n                let ObjActToAdd = [];\n                let parent = ''\n                let child = ''\n                Object.keys(allKeyId).map((i) => {\n                    if (i.split('//').length > 1) {\n                        if (i.split('//')[i.split('//').length - 1].trim() == eleCont) {\n                            child = allKeyId[i]\n\n                        }\n                        if (i.split('//')[0].trim() === eleModule) {\n                            parent = allKeyId[eleModule]\n                        }\n                    }\n                })\n                Object.keys(MajorObj[eleModule][eleCont]).forEach((eleAct, indexAct) => {\n                    let ObjShowToAdd = []\n                    let parent = ''\n                    let child = ''\n                    Object.keys(allKeyId).map((i) => {\n                        if (i.split('//').length > 1) {\n                            if (i.split('//')[i.split('//').length - 1].trim() == eleAct) {\n                                child = allKeyId[i]\n                            }\n                            if (i.split('//')[i.split('//').length - 1].trim() == eleCont) {\n                                parent = allKeyId[i]\n                            }\n                        }\n                    })\n                    Object.keys(MajorObj[eleModule][eleCont][eleAct]).forEach((eleShow, indexShow) => {\n                        let ObjAnyToAdd = [];\n                        let parent = ''\n                        let child = ''\n                        Object.keys(allKeyId).map((i) => {\n                            if (i.split('//').length > 1) {\n                                if (i.split('//')[i.split('//').length - 1].trim() == eleShow) {\n                                    child = allKeyId[i]\n                                }\n                                if (i.split('//')[i.split('//').length - 1].trim() == eleAct) {\n                                    parent = allKeyId[i]\n                                }\n                            }\n                        })\n                        Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow]).forEach((eleAny, indexAny) => {\n                            let ObjAlfaToAdd = []\n                            let parent = ''\n                            let child = ''\n                            Object.keys(allKeyId).map((i) => {\n                                if (i.split('//').length > 1) {\n                                    if (i.split('//')[i.split('//').length - 1].trim() == eleAny) {\n                                        child = allKeyId[i]\n                                    }\n                                    if (i.split('//')[i.split('//').length - 1].trim() == eleShow) {\n                                        parent = allKeyId[i]\n                                    }\n                                }\n                            })\n                            Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow][eleAny]).forEach((eleAlfa, indexAlfa) => {\n                                let ObjBetaToAdd = [];\n                                let parent = ''\n                                let child = ''\n                                Object.keys(allKeyId).map((i) => {\n                                    if (i.split('//').length > 1) {\n                                        if (i.split('//')[i.split('//').length - 1].trim() == eleAlfa) {\n                                            child = allKeyId[i]\n                                        }\n                                        if (i.split('//')[i.split('//').length - 1].trim() == eleAny) {\n                                            parent = allKeyId[i]\n                                        }\n                                    }\n                                })\n                                Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow][eleAny][eleAlfa]).forEach((eleBeta, indexBeta) => {\n                                    let ObjectGamaToAdd = [];\n\n                                    let parent = ''\n                                    let child = ''\n                                    Object.keys(allKeyId).map((i) => {\n                                        if (i.split('//').length > 1) {\n                                            if (i.split('//')[i.split('//').length - 1].trim() == eleBeta) {\n                                                child = allKeyId[i]\n                                            }\n                                            if (i.split('//')[i.split('//').length - 1].trim() == eleAlfa) {\n                                                parent = allKeyId[i]\n                                            }\n                                        }\n                                    })\n                                    Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow][eleAny][eleAlfa][eleBeta]).forEach((eleGama, indexGama) => {\n                                        let parent = ''\n                                        let child = ''\n                                        Object.keys(allKeyId).map((i) => {\n                                            if (i.split('//').length > 1) {\n                                                if (i.split('//')[i.split('//').length - 1].trim() == eleGama) {\n                                                    child = allKeyId[i]\n                                                }\n                                                if (i.split('>')[i.split('>').length - 1].trim() == eleBeta) {\n                                                    parent = allKeyId[i]\n                                                }\n                                            }\n                                        })\n                                        ObjectGamaToAdd[indexGama] = {\n                                            name: eleGama,\n                                            marketplace_id: child,\n                                            marketplace_parent_id: parent,\n                                            marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}>${eleAlfa}>${eleBeta}>${eleGama}`, level: 7, children: []\n                                        }\n\n                                    })\n\n                                    ObjBetaToAdd[indexBeta] = {\n                                        name: eleBeta,\n                                        marketplace_id: child,\n                                        marketplace_parent_id: parent,\n                                        marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}>${eleAlfa}>${eleBeta}`, level: 6, children: ObjectGamaToAdd\n                                    }\n                                })\n\n                                ObjAlfaToAdd[indexAlfa] = {\n                                    name: eleAlfa,\n                                    marketplace_id: child,\n                                    marketplace_parent_id: parent,\n                                    marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}>${eleAlfa}`, children: ObjBetaToAdd, level: 5\n                                }\n                                // }\n                            })\n                            ObjAnyToAdd[indexAny] = {\n                                name: eleAny,\n                                marketplace_id: child,\n                                marketplace_parent_id: parent,\n                                marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}`, children: ObjAlfaToAdd, level: 4\n                            }\n                        })\n                        ObjShowToAdd[indexShow] = {\n                            name: eleShow,\n                            marketplace_id: child,\n                            marketplace_parent_id: parent,\n                            marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}`, children: ObjAnyToAdd, level: 3\n                        }\n                    })\n                    ObjActToAdd[indexAct] = {\n                        name: eleAct,\n                        marketplace_id: child,\n                        marketplace_parent_id: parent,\n                        marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}>${eleAct}`, children: ObjShowToAdd, level: 2\n                    }\n                })\n                ObjContToAdd[indexCont] = {\n                    name: eleCont,\n                    marketplace_id: child,\n                    marketplace_parent_id: parent,\n                    marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}`, children: ObjActToAdd, level: 1\n                }\n            })\n            nodes[indexMod] = {\n                name: eleModule,\n                marketplace_id: child,\n                marketplace_parent_id: parent,\n                marketplace: 'Ebay_UK', full_path: `${eleModule}`, children: ObjContToAdd, level: 0\n            }\n        })\n        // console.log(nodes)\n        console.log(JSON.stringify(nodes))\n\n\n\n\n    }\n\n\n\n\n    render() {\n\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n\nexport default EbayUK\n\n\n",["127","128"],"/home/cedcoss/Desktop/mapping/my-app/src/component/DataTable.js",["129","130","131","132","133","134"],"/home/cedcoss/Desktop/mapping/my-app/src/component/Edit.js",["135","136","137","138","139","140","141","142","143","144"],"/home/cedcoss/Desktop/mapping/my-app/src/component/Home.js",["145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"/home/cedcoss/Desktop/mapping/my-app/src/component/Edit_click.js",["162","163","164","165","166","167","168","169","170","171","172","173"],"/home/cedcoss/Desktop/mapping/my-app/src/component/function.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":28,"nodeType":"180","messageId":"181","endLine":2,"endColumn":36},{"ruleId":"178","severity":1,"message":"182","line":2,"column":38,"nodeType":"180","messageId":"181","endLine":2,"endColumn":47},{"ruleId":"178","severity":1,"message":"183","line":56,"column":13,"nodeType":"180","messageId":"181","endLine":56,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":73,"column":43,"nodeType":"186","messageId":"187","endLine":73,"endColumn":45},{"ruleId":"188","severity":1,"message":"189","line":75,"column":30,"nodeType":"190","messageId":"191","endLine":75,"endColumn":32},{"ruleId":"184","severity":1,"message":"185","line":84,"column":47,"nodeType":"186","messageId":"187","endLine":84,"endColumn":49},{"ruleId":"188","severity":1,"message":"189","line":86,"column":74,"nodeType":"190","messageId":"191","endLine":86,"endColumn":76},{"ruleId":"184","severity":1,"message":"185","line":99,"column":51,"nodeType":"186","messageId":"187","endLine":99,"endColumn":53},{"ruleId":"188","severity":1,"message":"189","line":101,"column":78,"nodeType":"190","messageId":"191","endLine":101,"endColumn":80},{"ruleId":"188","severity":1,"message":"189","line":104,"column":78,"nodeType":"190","messageId":"191","endLine":104,"endColumn":80},{"ruleId":"184","severity":1,"message":"185","line":113,"column":55,"nodeType":"186","messageId":"187","endLine":113,"endColumn":57},{"ruleId":"188","severity":1,"message":"189","line":115,"column":82,"nodeType":"190","messageId":"191","endLine":115,"endColumn":84},{"ruleId":"188","severity":1,"message":"189","line":118,"column":82,"nodeType":"190","messageId":"191","endLine":118,"endColumn":84},{"ruleId":"184","severity":1,"message":"185","line":127,"column":59,"nodeType":"186","messageId":"187","endLine":127,"endColumn":61},{"ruleId":"188","severity":1,"message":"189","line":129,"column":86,"nodeType":"190","messageId":"191","endLine":129,"endColumn":88},{"ruleId":"188","severity":1,"message":"189","line":132,"column":86,"nodeType":"190","messageId":"191","endLine":132,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":141,"column":63,"nodeType":"186","messageId":"187","endLine":141,"endColumn":65},{"ruleId":"188","severity":1,"message":"189","line":143,"column":90,"nodeType":"190","messageId":"191","endLine":143,"endColumn":92},{"ruleId":"188","severity":1,"message":"189","line":146,"column":90,"nodeType":"190","messageId":"191","endLine":146,"endColumn":92},{"ruleId":"184","severity":1,"message":"185","line":156,"column":67,"nodeType":"186","messageId":"187","endLine":156,"endColumn":69},{"ruleId":"188","severity":1,"message":"189","line":158,"column":94,"nodeType":"190","messageId":"191","endLine":158,"endColumn":96},{"ruleId":"188","severity":1,"message":"189","line":161,"column":94,"nodeType":"190","messageId":"191","endLine":161,"endColumn":96},{"ruleId":"184","severity":1,"message":"185","line":169,"column":71,"nodeType":"186","messageId":"187","endLine":169,"endColumn":73},{"ruleId":"188","severity":1,"message":"189","line":171,"column":98,"nodeType":"190","messageId":"191","endLine":171,"endColumn":100},{"ruleId":"188","severity":1,"message":"189","line":174,"column":98,"nodeType":"190","messageId":"191","endLine":174,"endColumn":100},{"ruleId":"178","severity":1,"message":"179","line":2,"column":28,"nodeType":"180","messageId":"181","endLine":2,"endColumn":36},{"ruleId":"178","severity":1,"message":"182","line":2,"column":38,"nodeType":"180","messageId":"181","endLine":2,"endColumn":47},{"ruleId":"178","severity":1,"message":"183","line":61,"column":13,"nodeType":"180","messageId":"181","endLine":61,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":78,"column":43,"nodeType":"186","messageId":"187","endLine":78,"endColumn":45},{"ruleId":"188","severity":1,"message":"189","line":80,"column":30,"nodeType":"190","messageId":"191","endLine":80,"endColumn":32},{"ruleId":"184","severity":1,"message":"185","line":89,"column":47,"nodeType":"186","messageId":"187","endLine":89,"endColumn":49},{"ruleId":"188","severity":1,"message":"189","line":91,"column":76,"nodeType":"190","messageId":"191","endLine":91,"endColumn":78},{"ruleId":"184","severity":1,"message":"185","line":104,"column":51,"nodeType":"186","messageId":"187","endLine":104,"endColumn":53},{"ruleId":"188","severity":1,"message":"189","line":106,"column":80,"nodeType":"190","messageId":"191","endLine":106,"endColumn":82},{"ruleId":"188","severity":1,"message":"189","line":109,"column":80,"nodeType":"190","messageId":"191","endLine":109,"endColumn":82},{"ruleId":"184","severity":1,"message":"185","line":118,"column":55,"nodeType":"186","messageId":"187","endLine":118,"endColumn":57},{"ruleId":"188","severity":1,"message":"189","line":120,"column":84,"nodeType":"190","messageId":"191","endLine":120,"endColumn":86},{"ruleId":"188","severity":1,"message":"189","line":123,"column":84,"nodeType":"190","messageId":"191","endLine":123,"endColumn":86},{"ruleId":"184","severity":1,"message":"185","line":132,"column":59,"nodeType":"186","messageId":"187","endLine":132,"endColumn":61},{"ruleId":"188","severity":1,"message":"189","line":134,"column":88,"nodeType":"190","messageId":"191","endLine":134,"endColumn":90},{"ruleId":"188","severity":1,"message":"189","line":137,"column":88,"nodeType":"190","messageId":"191","endLine":137,"endColumn":90},{"ruleId":"184","severity":1,"message":"185","line":146,"column":63,"nodeType":"186","messageId":"187","endLine":146,"endColumn":65},{"ruleId":"188","severity":1,"message":"189","line":148,"column":92,"nodeType":"190","messageId":"191","endLine":148,"endColumn":94},{"ruleId":"188","severity":1,"message":"189","line":151,"column":92,"nodeType":"190","messageId":"191","endLine":151,"endColumn":94},{"ruleId":"184","severity":1,"message":"185","line":161,"column":67,"nodeType":"186","messageId":"187","endLine":161,"endColumn":69},{"ruleId":"188","severity":1,"message":"189","line":163,"column":96,"nodeType":"190","messageId":"191","endLine":163,"endColumn":98},{"ruleId":"188","severity":1,"message":"189","line":166,"column":96,"nodeType":"190","messageId":"191","endLine":166,"endColumn":98},{"ruleId":"184","severity":1,"message":"185","line":174,"column":71,"nodeType":"186","messageId":"187","endLine":174,"endColumn":73},{"ruleId":"188","severity":1,"message":"189","line":176,"column":100,"nodeType":"190","messageId":"191","endLine":176,"endColumn":102},{"ruleId":"188","severity":1,"message":"189","line":179,"column":98,"nodeType":"190","messageId":"191","endLine":179,"endColumn":100},{"ruleId":"178","severity":1,"message":"179","line":2,"column":28,"nodeType":"180","messageId":"181","endLine":2,"endColumn":36},{"ruleId":"178","severity":1,"message":"182","line":2,"column":38,"nodeType":"180","messageId":"181","endLine":2,"endColumn":47},{"ruleId":"178","severity":1,"message":"183","line":54,"column":13,"nodeType":"180","messageId":"181","endLine":54,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":71,"column":43,"nodeType":"186","messageId":"187","endLine":71,"endColumn":45},{"ruleId":"188","severity":1,"message":"189","line":73,"column":30,"nodeType":"190","messageId":"191","endLine":73,"endColumn":32},{"ruleId":"184","severity":1,"message":"185","line":82,"column":47,"nodeType":"186","messageId":"187","endLine":82,"endColumn":49},{"ruleId":"188","severity":1,"message":"189","line":84,"column":76,"nodeType":"190","messageId":"191","endLine":84,"endColumn":78},{"ruleId":"184","severity":1,"message":"185","line":97,"column":51,"nodeType":"186","messageId":"187","endLine":97,"endColumn":53},{"ruleId":"188","severity":1,"message":"189","line":99,"column":80,"nodeType":"190","messageId":"191","endLine":99,"endColumn":82},{"ruleId":"188","severity":1,"message":"189","line":102,"column":80,"nodeType":"190","messageId":"191","endLine":102,"endColumn":82},{"ruleId":"184","severity":1,"message":"185","line":111,"column":55,"nodeType":"186","messageId":"187","endLine":111,"endColumn":57},{"ruleId":"188","severity":1,"message":"189","line":113,"column":84,"nodeType":"190","messageId":"191","endLine":113,"endColumn":86},{"ruleId":"188","severity":1,"message":"189","line":116,"column":84,"nodeType":"190","messageId":"191","endLine":116,"endColumn":86},{"ruleId":"184","severity":1,"message":"185","line":125,"column":59,"nodeType":"186","messageId":"187","endLine":125,"endColumn":61},{"ruleId":"188","severity":1,"message":"189","line":127,"column":88,"nodeType":"190","messageId":"191","endLine":127,"endColumn":90},{"ruleId":"188","severity":1,"message":"189","line":130,"column":88,"nodeType":"190","messageId":"191","endLine":130,"endColumn":90},{"ruleId":"184","severity":1,"message":"185","line":139,"column":63,"nodeType":"186","messageId":"187","endLine":139,"endColumn":65},{"ruleId":"188","severity":1,"message":"189","line":141,"column":92,"nodeType":"190","messageId":"191","endLine":141,"endColumn":94},{"ruleId":"188","severity":1,"message":"189","line":144,"column":92,"nodeType":"190","messageId":"191","endLine":144,"endColumn":94},{"ruleId":"184","severity":1,"message":"185","line":154,"column":67,"nodeType":"186","messageId":"187","endLine":154,"endColumn":69},{"ruleId":"188","severity":1,"message":"189","line":156,"column":96,"nodeType":"190","messageId":"191","endLine":156,"endColumn":98},{"ruleId":"188","severity":1,"message":"189","line":159,"column":96,"nodeType":"190","messageId":"191","endLine":159,"endColumn":98},{"ruleId":"184","severity":1,"message":"185","line":167,"column":71,"nodeType":"186","messageId":"187","endLine":167,"endColumn":73},{"ruleId":"188","severity":1,"message":"189","line":169,"column":100,"nodeType":"190","messageId":"191","endLine":169,"endColumn":102},{"ruleId":"188","severity":1,"message":"189","line":172,"column":98,"nodeType":"190","messageId":"191","endLine":172,"endColumn":100},{"ruleId":"174","replacedBy":"192"},{"ruleId":"176","replacedBy":"193"},{"ruleId":"188","severity":1,"message":"189","line":39,"column":41,"nodeType":"190","messageId":"191","endLine":39,"endColumn":43},{"ruleId":"188","severity":1,"message":"189","line":44,"column":40,"nodeType":"190","messageId":"191","endLine":44,"endColumn":42},{"ruleId":"184","severity":1,"message":"185","line":61,"column":42,"nodeType":"186","messageId":"187","endLine":61,"endColumn":44},{"ruleId":"194","severity":1,"message":"195","line":62,"column":17,"nodeType":"196","messageId":"197","endLine":70,"endColumn":18},{"ruleId":"198","severity":1,"message":"199","line":65,"column":21,"nodeType":"200","messageId":"201","endLine":66,"endColumn":56},{"ruleId":"198","severity":1,"message":"199","line":68,"column":21,"nodeType":"200","messageId":"201","endLine":69,"endColumn":103},{"ruleId":"178","severity":1,"message":"202","line":1,"column":24,"nodeType":"180","messageId":"181","endLine":1,"endColumn":34},{"ruleId":"178","severity":1,"message":"203","line":1,"column":43,"nodeType":"180","messageId":"181","endLine":1,"endColumn":49},{"ruleId":"178","severity":1,"message":"204","line":1,"column":69,"nodeType":"180","messageId":"181","endLine":1,"endColumn":74},{"ruleId":"178","severity":1,"message":"205","line":3,"column":8,"nodeType":"180","messageId":"181","endLine":3,"endColumn":12},{"ruleId":"184","severity":1,"message":"185","line":42,"column":65,"nodeType":"186","messageId":"187","endLine":42,"endColumn":67},{"ruleId":"194","severity":1,"message":"195","line":45,"column":29,"nodeType":"196","messageId":"197","endLine":54,"endColumn":30},{"ruleId":"198","severity":1,"message":"199","line":48,"column":33,"nodeType":"200","messageId":"201","endLine":49,"endColumn":80},{"ruleId":"198","severity":1,"message":"199","line":51,"column":33,"nodeType":"200","messageId":"201","endLine":53,"endColumn":134},{"ruleId":"188","severity":1,"message":"189","line":72,"column":54,"nodeType":"190","messageId":"191","endLine":72,"endColumn":56},{"ruleId":"206","severity":1,"message":"207","line":87,"column":21,"nodeType":"208","endLine":87,"endColumn":56},{"ruleId":"178","severity":1,"message":"209","line":13,"column":8,"nodeType":"180","messageId":"181","endLine":13,"endColumn":14},{"ruleId":"178","severity":1,"message":"210","line":14,"column":8,"nodeType":"180","messageId":"181","endLine":14,"endColumn":16},{"ruleId":"188","severity":1,"message":"211","line":121,"column":34,"nodeType":"190","messageId":"191","endLine":121,"endColumn":36},{"ruleId":"188","severity":1,"message":"211","line":121,"column":69,"nodeType":"190","messageId":"191","endLine":121,"endColumn":71},{"ruleId":"188","severity":1,"message":"189","line":123,"column":29,"nodeType":"190","messageId":"191","endLine":123,"endColumn":31},{"ruleId":"188","severity":1,"message":"189","line":165,"column":45,"nodeType":"190","messageId":"191","endLine":165,"endColumn":47},{"ruleId":"188","severity":1,"message":"189","line":168,"column":44,"nodeType":"190","messageId":"191","endLine":168,"endColumn":46},{"ruleId":"188","severity":1,"message":"189","line":172,"column":49,"nodeType":"190","messageId":"191","endLine":172,"endColumn":51},{"ruleId":"188","severity":1,"message":"189","line":181,"column":49,"nodeType":"190","messageId":"191","endLine":181,"endColumn":51},{"ruleId":"188","severity":1,"message":"189","line":183,"column":48,"nodeType":"190","messageId":"191","endLine":183,"endColumn":50},{"ruleId":"188","severity":1,"message":"189","line":188,"column":53,"nodeType":"190","messageId":"191","endLine":188,"endColumn":55},{"ruleId":"188","severity":1,"message":"189","line":214,"column":25,"nodeType":"190","messageId":"191","endLine":214,"endColumn":27},{"ruleId":"184","severity":1,"message":"212","line":269,"column":70,"nodeType":"186","messageId":"213","endLine":269,"endColumn":72},{"ruleId":"188","severity":1,"message":"211","line":272,"column":39,"nodeType":"190","messageId":"191","endLine":272,"endColumn":41},{"ruleId":"184","severity":1,"message":"212","line":304,"column":72,"nodeType":"186","messageId":"213","endLine":304,"endColumn":74},{"ruleId":"188","severity":1,"message":"211","line":310,"column":39,"nodeType":"190","messageId":"191","endLine":310,"endColumn":41},{"ruleId":"214","severity":1,"message":"215","line":311,"column":46,"nodeType":"180","messageId":"216","endLine":311,"endColumn":47},{"ruleId":"178","severity":1,"message":"217","line":14,"column":8,"nodeType":"180","messageId":"181","endLine":14,"endColumn":17},{"ruleId":"188","severity":1,"message":"211","line":74,"column":32,"nodeType":"190","messageId":"191","endLine":74,"endColumn":34},{"ruleId":"188","severity":1,"message":"189","line":120,"column":45,"nodeType":"190","messageId":"191","endLine":120,"endColumn":47},{"ruleId":"188","severity":1,"message":"189","line":122,"column":44,"nodeType":"190","messageId":"191","endLine":122,"endColumn":46},{"ruleId":"188","severity":1,"message":"189","line":126,"column":49,"nodeType":"190","messageId":"191","endLine":126,"endColumn":51},{"ruleId":"178","severity":1,"message":"218","line":176,"column":13,"nodeType":"180","messageId":"181","endLine":176,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":181,"column":42,"nodeType":"186","messageId":"187","endLine":181,"endColumn":44},{"ruleId":"194","severity":1,"message":"195","line":182,"column":17,"nodeType":"196","messageId":"197","endLine":190,"endColumn":18},{"ruleId":"198","severity":1,"message":"199","line":185,"column":21,"nodeType":"200","messageId":"201","endLine":186,"endColumn":56},{"ruleId":"198","severity":1,"message":"199","line":188,"column":21,"nodeType":"200","messageId":"201","endLine":189,"endColumn":131},{"ruleId":"184","severity":1,"message":"212","line":243,"column":70,"nodeType":"186","messageId":"213","endLine":243,"endColumn":72},{"ruleId":"188","severity":1,"message":"211","line":246,"column":39,"nodeType":"190","messageId":"191","endLine":246,"endColumn":41},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'c' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["219"],["220"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'FlexLayout' is defined but never used.","'Select' is defined but never used.","'Toast' is defined but never used.","'Home' is defined but never used.","react/jsx-pascal-case","Imported JSX component Edit_click must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'EbayUs' is defined but never used.","'Taxonomy' is defined but never used.","Expected '!==' and instead saw '!='.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-redeclare","'i' is already defined.","redeclared","'DataTable' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
[{"/home/cedcoss/Desktop/mapping/my-app/src/index.js":"1","/home/cedcoss/Desktop/mapping/my-app/src/App.js":"2","/home/cedcoss/Desktop/mapping/my-app/src/reportWebVitals.js":"3","/home/cedcoss/Desktop/mapping/my-app/src/component/taxonomy.js":"4","/home/cedcoss/Desktop/mapping/my-app/src/component/EbayUs.js":"5","/home/cedcoss/Desktop/mapping/my-app/src/component/Ebay_UK.js":"6","/home/cedcoss/Desktop/mapping/my-app/src/component/DataTable.js":"7"},{"size":500,"mtime":1611922150921,"results":"8","hashOfConfig":"9"},{"size":9285,"mtime":1612792833094,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611922150921,"results":"11","hashOfConfig":"9"},{"size":11270,"mtime":1612528134054,"results":"12","hashOfConfig":"9"},{"size":11617,"mtime":1612767916766,"results":"13","hashOfConfig":"9"},{"size":11620,"mtime":1612776482979,"results":"14","hashOfConfig":"9"},{"size":1532,"mtime":1612786853074,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ukxxca",{"filePath":"19","messages":"20","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/cedcoss/Desktop/mapping/my-app/src/index.js",[],["33","34"],"/home/cedcoss/Desktop/mapping/my-app/src/App.js",["35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50"],"/home/cedcoss/Desktop/mapping/my-app/src/reportWebVitals.js",[],"/home/cedcoss/Desktop/mapping/my-app/src/component/taxonomy.js",["51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"\nimport React, { Component, useState, useEffect } from 'react'\n\nexport class Taxonomy extends Component {\n    constructor() {\n        super()\n        this.state = {\n            abc: {},\n        }\n    }\n\n\n\n\n    async componentDidMount() {\n        var temp;\n        var finalObj = {};\n        var allKeyId = {}\n        await fetch('https://raw.githubusercontent.com/erashish455/text/main/asdf.txt').then(response => response.text())\n            .then(data => {\n                let txt = data\n                temp = txt.split(\"\\n\");\n                temp.shift();\n                temp.pop();\n                temp.forEach((item) => {\n                    let bpl = item.split(' - ')\n                    let spl = item.split(' - ')[1].split(\">\")\n                    allKeyId[bpl[1]] = bpl[0].trim();\n\n                    var nested = spl.reduceRight(function (obj, value) {\n                        return { [value.trim()]: obj };\n                    }, {});\n\n                    finalObj = this.combine(finalObj, nested);\n                });\n                // console.log(finalObj)\n                // console.log(allKeyId)\n                this.recurtion(finalObj, allKeyId)\n\n            })\n    }\n\n\n    combine = (prevObj, nextObj) => {\n        var c = 0;\n        for (var key in nextObj) {\n            if (!(key in prevObj)) {\n                prevObj[key] = nextObj[key];\n            } else {\n                this.combine(prevObj[key], nextObj[key]);\n            }\n        }\n        return prevObj;\n    }\n    recurtion(object, allKeyId) {\n        let nodes = [];\n        let MajorObj = object\n        Object.keys(MajorObj).forEach((eleModule, indexMod) => {\n            let ObjContToAdd = [];\n            let parent = '0'\n            let child = ''\n            Object.keys(allKeyId).map((i) => {\n\n                if (i.trim() == eleModule) {\n                    child = allKeyId[i]\n                }\n            })\n\n            Object.keys(MajorObj[eleModule]).forEach((eleCont, indexCont) => {\n                let ObjActToAdd = [];\n                let parent = ''\n                let child = ''\n                Object.keys(allKeyId).map((i) => {\n                    if (i.split('>').length > 1) {\n                        if (i.split('>')[i.split('>').length - 1].trim() == eleCont) {\n                            child = allKeyId[i]\n\n                        }\n                        if (i.split('>')[0].trim() === eleModule) {\n                            parent = allKeyId[eleModule]\n                        }\n                    }\n                })\n                Object.keys(MajorObj[eleModule][eleCont]).forEach((eleAct, indexAct) => {\n                    let ObjShowToAdd = []\n                    let parent = ''\n                    let child = ''\n                    Object.keys(allKeyId).map((i) => {\n                        if (i.split('>').length > 1) {\n                            if (i.split('>')[i.split('>').length - 1].trim() == eleAct) {\n                                child = allKeyId[i]\n                            }\n                            if (i.split('>')[i.split('>').length - 1].trim() == eleCont) {\n                                parent = allKeyId[i]\n                            }\n                        }\n                    })\n                    Object.keys(MajorObj[eleModule][eleCont][eleAct]).forEach((eleShow, indexShow) => {\n                        let ObjAnyToAdd = [];\n                        let parent = ''\n                        let child = ''\n                        Object.keys(allKeyId).map((i) => {\n                            if (i.split('>').length > 1) {\n                                if (i.split('>')[i.split('>').length - 1].trim() == eleShow) {\n                                    child = allKeyId[i]\n                                }\n                                if (i.split('>')[i.split('>').length - 1].trim() == eleAct) {\n                                    parent = allKeyId[i]\n                                }\n                            }\n                        })\n                        Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow]).forEach((eleAny, indexAny) => {\n                            let ObjAlfaToAdd = []\n                            let parent = ''\n                            let child = ''\n                            Object.keys(allKeyId).map((i) => {\n                                if (i.split('>').length > 1) {\n                                    if (i.split('>')[i.split('>').length - 1].trim() == eleAny) {\n                                        child = allKeyId[i]\n                                    }\n                                    if (i.split('>')[i.split('>').length - 1].trim() == eleShow) {\n                                        parent = allKeyId[i]\n                                    }\n                                }\n                            })\n                            Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow][eleAny]).forEach((eleAlfa, indexAlfa) => {\n                                let ObjBetaToAdd = [];\n                                let parent = ''\n                                let child = ''\n                                Object.keys(allKeyId).map((i) => {\n                                    if (i.split('>').length > 1) {\n                                        if (i.split('>')[i.split('>').length - 1].trim() == eleAlfa) {\n                                            child = allKeyId[i]\n                                        }\n                                        if (i.split('>')[i.split('>').length - 1].trim() == eleAny) {\n                                            parent = allKeyId[i]\n                                        }\n                                    }\n                                })\n                                Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow][eleAny][eleAlfa]).forEach((eleBeta, indexBeta) => {\n                                    let ObjectGamaToAdd = [];\n\n                                    let parent = ''\n                                    let child = ''\n                                    Object.keys(allKeyId).map((i) => {\n                                        if (i.split('>').length > 1) {\n                                            if (i.split('>')[i.split('>').length - 1].trim() == eleBeta) {\n                                                child = allKeyId[i]\n                                            }\n                                            if (i.split('>')[i.split('>').length - 1].trim() == eleAlfa) {\n                                                parent = allKeyId[i]\n                                            }\n                                        }\n                                    })\n                                    Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow][eleAny][eleAlfa][eleBeta]).forEach((eleGama, indexGama) => {\n                                        let parent = ''\n                                        let child = ''\n                                        Object.keys(allKeyId).map((i) => {\n                                            if (i.split('>').length > 1) {\n                                                if (i.split('>')[i.split('>').length - 1].trim() == eleGama) {\n                                                    child = allKeyId[i]\n                                                }\n                                                if (i.split('>')[i.split('>').length - 1].trim() == eleBeta) {\n                                                    parent = allKeyId[i]\n                                                }\n                                            }\n                                        })\n                                        ObjectGamaToAdd[indexGama] = {\n                                            name: eleGama,\n                                            marketplace_id: child,\n                                            marketplace_parent_id: parent,\n                                            marketplace: 'google', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}>${eleAlfa}>${eleBeta}>${eleGama}`, level: 7, children: []\n                                        }\n\n                                    })\n\n                                    ObjBetaToAdd[indexBeta] = {\n                                        name: eleBeta,\n                                        marketplace_id: child,\n                                        marketplace_parent_id: parent,\n                                        marketplace: 'google', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}>${eleAlfa}>${eleBeta}`, level: 6, children: ObjectGamaToAdd\n                                    }\n                                })\n\n                                ObjAlfaToAdd[indexAlfa] = {\n                                    name: eleAlfa,\n                                    marketplace_id: child,\n                                    marketplace_parent_id: parent,\n                                    marketplace: 'google', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}>${eleAlfa}`, children: ObjBetaToAdd, level: 5\n                                }\n                                // }\n                            })\n                            ObjAnyToAdd[indexAny] = {\n                                name: eleAny,\n                                marketplace_id: child,\n                                marketplace_parent_id: parent,\n                                marketplace: 'google', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}`, children: ObjAlfaToAdd, level: 4\n                            }\n                        })\n                        ObjShowToAdd[indexShow] = {\n                            name: eleShow,\n                            marketplace_id: child,\n                            marketplace_parent_id: parent,\n                            marketplace: 'google', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}`, children: ObjAnyToAdd, level: 3\n                        }\n                    })\n                    ObjActToAdd[indexAct] = {\n                        name: eleAct,\n                        marketplace_id: child,\n                        marketplace_parent_id: parent,\n                        marketplace: 'google', full_path: `${eleModule}>${eleCont}>${eleAct}`, children: ObjShowToAdd, level: 2\n                    }\n                })\n                ObjContToAdd[indexCont] = {\n                    name: eleCont,\n                    marketplace_id: child,\n                    marketplace_parent_id: parent,\n                    marketplace: 'google', full_path: `${eleModule}>${eleCont}`, children: ObjActToAdd, level: 1\n                }\n            })\n            nodes[indexMod] = {\n                name: eleModule,\n                marketplace_id: child,\n                marketplace_parent_id: parent,\n                marketplace: 'google', full_path: `${eleModule}`, children: ObjContToAdd, level: 0\n            }\n        })\n        // console.log(nodes)\n        console.log(JSON.stringify(nodes))\n\n\n\n\n    }\n\n\n\n\n    render() {\n\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n\nexport default Taxonomy\n\n\n","/home/cedcoss/Desktop/mapping/my-app/src/component/EbayUs.js",["76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"],"/home/cedcoss/Desktop/mapping/my-app/src/component/Ebay_UK.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"\nimport React, { Component, useState, useEffect } from 'react'\n\nexport class EbayUK extends Component {\n    constructor() {\n        super()\n        this.state = {\n            abc: {},\n        }\n    }\n\n\n\n\n    async componentDidMount() {\n        var temp;\n        var finalObj = {};\n        var allKeyId = {}\n        await fetch('https://raw.githubusercontent.com/erashish455/text/main/Ebay_UK.txt').then(response => response.text())\n            .then(data => {\n                let maxLength = 0\n                let txt = data\n                temp = txt.split(\"\\n\");\n                // console.log(temp)\n                temp.shift();\n                temp.pop();\n                // console.log(temp)\n\n                temp.forEach((item) => {\n                    let bpl = item.split(' - ')\n                    let spl = item.split(' - ')[1].split('//')\n                    // console.log(spl)\n                    if (spl.length > maxLength) {\n                        maxLength = spl.length\n                    }\n                    allKeyId[bpl[1]] = bpl[0].trim();\n\n                    var nested = spl.reduceRight(function (obj, value) {\n                        return { [value.trim()]: obj };\n                    }, {});\n\n                    finalObj = this.combine(finalObj, nested);\n                });\n                // console.log(finalObj)\n                console.log(maxLength)\n                // console.log(allKeyId)\n                // this.recurtion(finalObj, allKeyId)\n\n            })\n    }\n\n\n    combine = (prevObj, nextObj) => {\n        var c = 0;\n        for (var key in nextObj) {\n            if (!(key in prevObj)) {\n                prevObj[key] = nextObj[key];\n            } else {\n                this.combine(prevObj[key], nextObj[key]);\n            }\n        }\n        return prevObj;\n    }\n    recurtion(object, allKeyId) {\n        let nodes = [];\n        let MajorObj = object\n        Object.keys(MajorObj).forEach((eleModule, indexMod) => {\n            let ObjContToAdd = [];\n            let parent = '0'\n            let child = ''\n            Object.keys(allKeyId).map((i) => {\n\n                if (i.trim() == eleModule) {\n                    child = allKeyId[i]\n                }\n            })\n\n            Object.keys(MajorObj[eleModule]).forEach((eleCont, indexCont) => {\n                let ObjActToAdd = [];\n                let parent = ''\n                let child = ''\n                Object.keys(allKeyId).map((i) => {\n                    if (i.split('//').length > 1) {\n                        if (i.split('//')[i.split('//').length - 1].trim() == eleCont) {\n                            child = allKeyId[i]\n\n                        }\n                        if (i.split('//')[0].trim() === eleModule) {\n                            parent = allKeyId[eleModule]\n                        }\n                    }\n                })\n                Object.keys(MajorObj[eleModule][eleCont]).forEach((eleAct, indexAct) => {\n                    let ObjShowToAdd = []\n                    let parent = ''\n                    let child = ''\n                    Object.keys(allKeyId).map((i) => {\n                        if (i.split('//').length > 1) {\n                            if (i.split('//')[i.split('//').length - 1].trim() == eleAct) {\n                                child = allKeyId[i]\n                            }\n                            if (i.split('//')[i.split('//').length - 1].trim() == eleCont) {\n                                parent = allKeyId[i]\n                            }\n                        }\n                    })\n                    Object.keys(MajorObj[eleModule][eleCont][eleAct]).forEach((eleShow, indexShow) => {\n                        let ObjAnyToAdd = [];\n                        let parent = ''\n                        let child = ''\n                        Object.keys(allKeyId).map((i) => {\n                            if (i.split('//').length > 1) {\n                                if (i.split('//')[i.split('//').length - 1].trim() == eleShow) {\n                                    child = allKeyId[i]\n                                }\n                                if (i.split('//')[i.split('//').length - 1].trim() == eleAct) {\n                                    parent = allKeyId[i]\n                                }\n                            }\n                        })\n                        Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow]).forEach((eleAny, indexAny) => {\n                            let ObjAlfaToAdd = []\n                            let parent = ''\n                            let child = ''\n                            Object.keys(allKeyId).map((i) => {\n                                if (i.split('//').length > 1) {\n                                    if (i.split('//')[i.split('//').length - 1].trim() == eleAny) {\n                                        child = allKeyId[i]\n                                    }\n                                    if (i.split('//')[i.split('//').length - 1].trim() == eleShow) {\n                                        parent = allKeyId[i]\n                                    }\n                                }\n                            })\n                            Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow][eleAny]).forEach((eleAlfa, indexAlfa) => {\n                                let ObjBetaToAdd = [];\n                                let parent = ''\n                                let child = ''\n                                Object.keys(allKeyId).map((i) => {\n                                    if (i.split('//').length > 1) {\n                                        if (i.split('//')[i.split('//').length - 1].trim() == eleAlfa) {\n                                            child = allKeyId[i]\n                                        }\n                                        if (i.split('//')[i.split('//').length - 1].trim() == eleAny) {\n                                            parent = allKeyId[i]\n                                        }\n                                    }\n                                })\n                                Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow][eleAny][eleAlfa]).forEach((eleBeta, indexBeta) => {\n                                    let ObjectGamaToAdd = [];\n\n                                    let parent = ''\n                                    let child = ''\n                                    Object.keys(allKeyId).map((i) => {\n                                        if (i.split('//').length > 1) {\n                                            if (i.split('//')[i.split('//').length - 1].trim() == eleBeta) {\n                                                child = allKeyId[i]\n                                            }\n                                            if (i.split('//')[i.split('//').length - 1].trim() == eleAlfa) {\n                                                parent = allKeyId[i]\n                                            }\n                                        }\n                                    })\n                                    Object.keys(MajorObj[eleModule][eleCont][eleAct][eleShow][eleAny][eleAlfa][eleBeta]).forEach((eleGama, indexGama) => {\n                                        let parent = ''\n                                        let child = ''\n                                        Object.keys(allKeyId).map((i) => {\n                                            if (i.split('//').length > 1) {\n                                                if (i.split('//')[i.split('//').length - 1].trim() == eleGama) {\n                                                    child = allKeyId[i]\n                                                }\n                                                if (i.split('>')[i.split('>').length - 1].trim() == eleBeta) {\n                                                    parent = allKeyId[i]\n                                                }\n                                            }\n                                        })\n                                        ObjectGamaToAdd[indexGama] = {\n                                            name: eleGama,\n                                            marketplace_id: child,\n                                            marketplace_parent_id: parent,\n                                            marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}>${eleAlfa}>${eleBeta}>${eleGama}`, level: 7, children: []\n                                        }\n\n                                    })\n\n                                    ObjBetaToAdd[indexBeta] = {\n                                        name: eleBeta,\n                                        marketplace_id: child,\n                                        marketplace_parent_id: parent,\n                                        marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}>${eleAlfa}>${eleBeta}`, level: 6, children: ObjectGamaToAdd\n                                    }\n                                })\n\n                                ObjAlfaToAdd[indexAlfa] = {\n                                    name: eleAlfa,\n                                    marketplace_id: child,\n                                    marketplace_parent_id: parent,\n                                    marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}>${eleAlfa}`, children: ObjBetaToAdd, level: 5\n                                }\n                                // }\n                            })\n                            ObjAnyToAdd[indexAny] = {\n                                name: eleAny,\n                                marketplace_id: child,\n                                marketplace_parent_id: parent,\n                                marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}>${eleAny}`, children: ObjAlfaToAdd, level: 4\n                            }\n                        })\n                        ObjShowToAdd[indexShow] = {\n                            name: eleShow,\n                            marketplace_id: child,\n                            marketplace_parent_id: parent,\n                            marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}>${eleAct}>${eleShow}`, children: ObjAnyToAdd, level: 3\n                        }\n                    })\n                    ObjActToAdd[indexAct] = {\n                        name: eleAct,\n                        marketplace_id: child,\n                        marketplace_parent_id: parent,\n                        marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}>${eleAct}`, children: ObjShowToAdd, level: 2\n                    }\n                })\n                ObjContToAdd[indexCont] = {\n                    name: eleCont,\n                    marketplace_id: child,\n                    marketplace_parent_id: parent,\n                    marketplace: 'Ebay_UK', full_path: `${eleModule}>${eleCont}`, children: ObjActToAdd, level: 1\n                }\n            })\n            nodes[indexMod] = {\n                name: eleModule,\n                marketplace_id: child,\n                marketplace_parent_id: parent,\n                marketplace: 'Ebay_UK', full_path: `${eleModule}`, children: ObjContToAdd, level: 0\n            }\n        })\n        // console.log(nodes)\n        console.log(JSON.stringify(nodes))\n\n\n\n\n    }\n\n\n\n\n    render() {\n\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n\nexport default EbayUK\n\n\n","/home/cedcoss/Desktop/mapping/my-app/src/component/DataTable.js",["126","127","128","129","130"],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":3,"column":48,"nodeType":"137","messageId":"138","endLine":3,"endColumn":53},{"ruleId":"135","severity":1,"message":"139","line":3,"column":63,"nodeType":"137","messageId":"138","endLine":3,"endColumn":68},{"ruleId":"135","severity":1,"message":"140","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":16},{"ruleId":"135","severity":1,"message":"141","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":78,"column":30,"nodeType":"144","messageId":"145","endLine":78,"endColumn":32},{"ruleId":"142","severity":1,"message":"146","line":80,"column":23,"nodeType":"144","messageId":"145","endLine":80,"endColumn":25},{"ruleId":"142","severity":1,"message":"146","line":108,"column":35,"nodeType":"144","messageId":"145","endLine":108,"endColumn":37},{"ruleId":"142","severity":1,"message":"146","line":113,"column":37,"nodeType":"144","messageId":"145","endLine":113,"endColumn":39},{"ruleId":"142","severity":1,"message":"146","line":120,"column":35,"nodeType":"144","messageId":"145","endLine":120,"endColumn":37},{"ruleId":"142","severity":1,"message":"146","line":124,"column":37,"nodeType":"144","messageId":"145","endLine":124,"endColumn":39},{"ruleId":"142","severity":1,"message":"146","line":135,"column":21,"nodeType":"144","messageId":"145","endLine":135,"endColumn":23},{"ruleId":"147","severity":1,"message":"148","line":186,"column":58,"nodeType":"149","messageId":"150","endLine":186,"endColumn":60},{"ruleId":"142","severity":1,"message":"143","line":189,"column":23,"nodeType":"144","messageId":"145","endLine":189,"endColumn":25},{"ruleId":"151","severity":1,"message":"152","line":190,"column":28,"nodeType":"137","messageId":"153","endLine":190,"endColumn":29},{"ruleId":"147","severity":1,"message":"148","line":204,"column":56,"nodeType":"149","messageId":"150","endLine":204,"endColumn":58},{"ruleId":"142","severity":1,"message":"143","line":206,"column":23,"nodeType":"144","messageId":"145","endLine":206,"endColumn":25},{"ruleId":"135","severity":1,"message":"154","line":2,"column":28,"nodeType":"137","messageId":"138","endLine":2,"endColumn":36},{"ruleId":"135","severity":1,"message":"155","line":2,"column":38,"nodeType":"137","messageId":"138","endLine":2,"endColumn":47},{"ruleId":"135","severity":1,"message":"156","line":45,"column":13,"nodeType":"137","messageId":"138","endLine":45,"endColumn":14},{"ruleId":"147","severity":1,"message":"157","line":62,"column":43,"nodeType":"149","messageId":"158","endLine":62,"endColumn":45},{"ruleId":"142","severity":1,"message":"146","line":64,"column":30,"nodeType":"144","messageId":"145","endLine":64,"endColumn":32},{"ruleId":"147","severity":1,"message":"157","line":73,"column":47,"nodeType":"149","messageId":"158","endLine":73,"endColumn":49},{"ruleId":"142","severity":1,"message":"146","line":75,"column":74,"nodeType":"144","messageId":"145","endLine":75,"endColumn":76},{"ruleId":"147","severity":1,"message":"157","line":88,"column":51,"nodeType":"149","messageId":"158","endLine":88,"endColumn":53},{"ruleId":"142","severity":1,"message":"146","line":90,"column":78,"nodeType":"144","messageId":"145","endLine":90,"endColumn":80},{"ruleId":"142","severity":1,"message":"146","line":93,"column":78,"nodeType":"144","messageId":"145","endLine":93,"endColumn":80},{"ruleId":"147","severity":1,"message":"157","line":102,"column":55,"nodeType":"149","messageId":"158","endLine":102,"endColumn":57},{"ruleId":"142","severity":1,"message":"146","line":104,"column":82,"nodeType":"144","messageId":"145","endLine":104,"endColumn":84},{"ruleId":"142","severity":1,"message":"146","line":107,"column":82,"nodeType":"144","messageId":"145","endLine":107,"endColumn":84},{"ruleId":"147","severity":1,"message":"157","line":116,"column":59,"nodeType":"149","messageId":"158","endLine":116,"endColumn":61},{"ruleId":"142","severity":1,"message":"146","line":118,"column":86,"nodeType":"144","messageId":"145","endLine":118,"endColumn":88},{"ruleId":"142","severity":1,"message":"146","line":121,"column":86,"nodeType":"144","messageId":"145","endLine":121,"endColumn":88},{"ruleId":"147","severity":1,"message":"157","line":130,"column":63,"nodeType":"149","messageId":"158","endLine":130,"endColumn":65},{"ruleId":"142","severity":1,"message":"146","line":132,"column":90,"nodeType":"144","messageId":"145","endLine":132,"endColumn":92},{"ruleId":"142","severity":1,"message":"146","line":135,"column":90,"nodeType":"144","messageId":"145","endLine":135,"endColumn":92},{"ruleId":"147","severity":1,"message":"157","line":145,"column":67,"nodeType":"149","messageId":"158","endLine":145,"endColumn":69},{"ruleId":"142","severity":1,"message":"146","line":147,"column":94,"nodeType":"144","messageId":"145","endLine":147,"endColumn":96},{"ruleId":"142","severity":1,"message":"146","line":150,"column":94,"nodeType":"144","messageId":"145","endLine":150,"endColumn":96},{"ruleId":"147","severity":1,"message":"157","line":158,"column":71,"nodeType":"149","messageId":"158","endLine":158,"endColumn":73},{"ruleId":"142","severity":1,"message":"146","line":160,"column":98,"nodeType":"144","messageId":"145","endLine":160,"endColumn":100},{"ruleId":"142","severity":1,"message":"146","line":163,"column":98,"nodeType":"144","messageId":"145","endLine":163,"endColumn":100},{"ruleId":"135","severity":1,"message":"154","line":2,"column":28,"nodeType":"137","messageId":"138","endLine":2,"endColumn":36},{"ruleId":"135","severity":1,"message":"155","line":2,"column":38,"nodeType":"137","messageId":"138","endLine":2,"endColumn":47},{"ruleId":"135","severity":1,"message":"156","line":54,"column":13,"nodeType":"137","messageId":"138","endLine":54,"endColumn":14},{"ruleId":"147","severity":1,"message":"157","line":71,"column":43,"nodeType":"149","messageId":"158","endLine":71,"endColumn":45},{"ruleId":"142","severity":1,"message":"146","line":73,"column":30,"nodeType":"144","messageId":"145","endLine":73,"endColumn":32},{"ruleId":"147","severity":1,"message":"157","line":82,"column":47,"nodeType":"149","messageId":"158","endLine":82,"endColumn":49},{"ruleId":"142","severity":1,"message":"146","line":84,"column":76,"nodeType":"144","messageId":"145","endLine":84,"endColumn":78},{"ruleId":"147","severity":1,"message":"157","line":97,"column":51,"nodeType":"149","messageId":"158","endLine":97,"endColumn":53},{"ruleId":"142","severity":1,"message":"146","line":99,"column":80,"nodeType":"144","messageId":"145","endLine":99,"endColumn":82},{"ruleId":"142","severity":1,"message":"146","line":102,"column":80,"nodeType":"144","messageId":"145","endLine":102,"endColumn":82},{"ruleId":"147","severity":1,"message":"157","line":111,"column":55,"nodeType":"149","messageId":"158","endLine":111,"endColumn":57},{"ruleId":"142","severity":1,"message":"146","line":113,"column":84,"nodeType":"144","messageId":"145","endLine":113,"endColumn":86},{"ruleId":"142","severity":1,"message":"146","line":116,"column":84,"nodeType":"144","messageId":"145","endLine":116,"endColumn":86},{"ruleId":"147","severity":1,"message":"157","line":125,"column":59,"nodeType":"149","messageId":"158","endLine":125,"endColumn":61},{"ruleId":"142","severity":1,"message":"146","line":127,"column":88,"nodeType":"144","messageId":"145","endLine":127,"endColumn":90},{"ruleId":"142","severity":1,"message":"146","line":130,"column":88,"nodeType":"144","messageId":"145","endLine":130,"endColumn":90},{"ruleId":"147","severity":1,"message":"157","line":139,"column":63,"nodeType":"149","messageId":"158","endLine":139,"endColumn":65},{"ruleId":"142","severity":1,"message":"146","line":141,"column":92,"nodeType":"144","messageId":"145","endLine":141,"endColumn":94},{"ruleId":"142","severity":1,"message":"146","line":144,"column":92,"nodeType":"144","messageId":"145","endLine":144,"endColumn":94},{"ruleId":"147","severity":1,"message":"157","line":154,"column":67,"nodeType":"149","messageId":"158","endLine":154,"endColumn":69},{"ruleId":"142","severity":1,"message":"146","line":156,"column":96,"nodeType":"144","messageId":"145","endLine":156,"endColumn":98},{"ruleId":"142","severity":1,"message":"146","line":159,"column":96,"nodeType":"144","messageId":"145","endLine":159,"endColumn":98},{"ruleId":"147","severity":1,"message":"157","line":167,"column":71,"nodeType":"149","messageId":"158","endLine":167,"endColumn":73},{"ruleId":"142","severity":1,"message":"146","line":169,"column":100,"nodeType":"144","messageId":"145","endLine":169,"endColumn":102},{"ruleId":"142","severity":1,"message":"146","line":172,"column":98,"nodeType":"144","messageId":"145","endLine":172,"endColumn":100},{"ruleId":"135","severity":1,"message":"154","line":2,"column":28,"nodeType":"137","messageId":"138","endLine":2,"endColumn":36},{"ruleId":"135","severity":1,"message":"155","line":2,"column":38,"nodeType":"137","messageId":"138","endLine":2,"endColumn":47},{"ruleId":"135","severity":1,"message":"156","line":54,"column":13,"nodeType":"137","messageId":"138","endLine":54,"endColumn":14},{"ruleId":"147","severity":1,"message":"157","line":71,"column":43,"nodeType":"149","messageId":"158","endLine":71,"endColumn":45},{"ruleId":"142","severity":1,"message":"146","line":73,"column":30,"nodeType":"144","messageId":"145","endLine":73,"endColumn":32},{"ruleId":"147","severity":1,"message":"157","line":82,"column":47,"nodeType":"149","messageId":"158","endLine":82,"endColumn":49},{"ruleId":"142","severity":1,"message":"146","line":84,"column":76,"nodeType":"144","messageId":"145","endLine":84,"endColumn":78},{"ruleId":"147","severity":1,"message":"157","line":97,"column":51,"nodeType":"149","messageId":"158","endLine":97,"endColumn":53},{"ruleId":"142","severity":1,"message":"146","line":99,"column":80,"nodeType":"144","messageId":"145","endLine":99,"endColumn":82},{"ruleId":"142","severity":1,"message":"146","line":102,"column":80,"nodeType":"144","messageId":"145","endLine":102,"endColumn":82},{"ruleId":"147","severity":1,"message":"157","line":111,"column":55,"nodeType":"149","messageId":"158","endLine":111,"endColumn":57},{"ruleId":"142","severity":1,"message":"146","line":113,"column":84,"nodeType":"144","messageId":"145","endLine":113,"endColumn":86},{"ruleId":"142","severity":1,"message":"146","line":116,"column":84,"nodeType":"144","messageId":"145","endLine":116,"endColumn":86},{"ruleId":"147","severity":1,"message":"157","line":125,"column":59,"nodeType":"149","messageId":"158","endLine":125,"endColumn":61},{"ruleId":"142","severity":1,"message":"146","line":127,"column":88,"nodeType":"144","messageId":"145","endLine":127,"endColumn":90},{"ruleId":"142","severity":1,"message":"146","line":130,"column":88,"nodeType":"144","messageId":"145","endLine":130,"endColumn":90},{"ruleId":"147","severity":1,"message":"157","line":139,"column":63,"nodeType":"149","messageId":"158","endLine":139,"endColumn":65},{"ruleId":"142","severity":1,"message":"146","line":141,"column":92,"nodeType":"144","messageId":"145","endLine":141,"endColumn":94},{"ruleId":"142","severity":1,"message":"146","line":144,"column":92,"nodeType":"144","messageId":"145","endLine":144,"endColumn":94},{"ruleId":"147","severity":1,"message":"157","line":154,"column":67,"nodeType":"149","messageId":"158","endLine":154,"endColumn":69},{"ruleId":"142","severity":1,"message":"146","line":156,"column":96,"nodeType":"144","messageId":"145","endLine":156,"endColumn":98},{"ruleId":"142","severity":1,"message":"146","line":159,"column":96,"nodeType":"144","messageId":"145","endLine":159,"endColumn":98},{"ruleId":"147","severity":1,"message":"157","line":167,"column":71,"nodeType":"149","messageId":"158","endLine":167,"endColumn":73},{"ruleId":"142","severity":1,"message":"146","line":169,"column":100,"nodeType":"144","messageId":"145","endLine":169,"endColumn":102},{"ruleId":"142","severity":1,"message":"146","line":172,"column":98,"nodeType":"144","messageId":"145","endLine":172,"endColumn":100},{"ruleId":"135","severity":1,"message":"159","line":1,"column":24,"nodeType":"137","messageId":"138","endLine":1,"endColumn":34},{"ruleId":"147","severity":1,"message":"157","line":32,"column":42,"nodeType":"149","messageId":"158","endLine":32,"endColumn":44},{"ruleId":"160","severity":1,"message":"161","line":33,"column":17,"nodeType":"162","messageId":"163","endLine":40,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":36,"column":21,"nodeType":"166","messageId":"167","endLine":37,"endColumn":44},{"ruleId":"164","severity":1,"message":"165","line":38,"column":21,"nodeType":"166","messageId":"167","endLine":39,"endColumn":100},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'Taxonomy' is defined but never used.","'EbayUK' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-redeclare","'i' is already defined.","redeclared","'useState' is defined but never used.","'useEffect' is defined but never used.","'c' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'FlexLayout' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation"]